浏览器在加载资源时，先根据这个资源的一些http header判断它是否命中强缓存，强缓存如果命中，浏览器直接从自己的缓存中读取资源，不会发请求到服务器。
当强缓存没有命中的时候，浏览器一定会发送一个请求到服务器，通过服务器端依据资源的另外一些http header验证这个资源是否命中协商缓存，如果协商缓存命中，服务器会将这个请求返回，但是不会返回这个资源的数据，而是告诉客户端可以直接从缓存中加载这个资源，于是浏览器就又会从自己的缓存中去加载这个资源。
----------------------------------------------------------------------------------------------------------------------------------------------
强缓存与协商缓存的共同点是：如果命中，都是从客户端缓存中加载资源，而不是从服务器加载资源数据；区别是：强缓存不发请求到服务器，协商缓存会发请求到服务器。
当协商缓存也没有命中的时候，浏览器直接从服务器加载资源数据。
----------------------------------------------------------------------------------------------------------------------------------------------
--------------
-	强缓存   -
--------------
-
命中了的强缓存的特征是:
1.Status 是 200
2.Size 是 from cache 

强缓存是利用了Expires或者cache-control的两个http的respone头实现的，表示客户端缓存的有效期
----------------------------------------------------------------------------------------------------------------------------------------------
具体步骤：
1.浏览器第一次跟服务器请求一个资源，服务器在返回这个资源的同时，在respone的header加上Cache-Control的header
2.浏览器在接收到这个资源后，会把这个资源连同所有response header一起缓存下来；
3.浏览器再请求这个资源时，先从缓存中寻找，找到这个资源后，根据它第一次的请求时间和Cache-Control设定的有效期，计算出一个资源过期时间，再拿这个过期时间跟当前的请求时间比较，如果请求时间在过期时间之前，就能命中缓存，否则就不行。
4.如果缓存没有命中，浏览器直接从服务器加载资源时，Cache-Control Header在重新加载的时候会被更新。

----------------------------------------------------------------------------------------------------------------------------------------------

禁用cache-conntrol强缓存
chrome，可以f12在network那里把缓存给禁掉(Disable cache)

----------------------------------------------------------------------------------------------------------------------------------------------

强缓存还有一点需要注意的是，通常都是针对静态资源使用，动态资源需要慎用

----------------------------------------------------------------------------------------------------------------------------------------------

---------------
-	协商缓存   -
---------------
-
命中协商缓存的特征：
status:304
not modified

----------------------------------------------------------------------------------------------------------------------------------------------

具体步骤
1.浏览器第一次跟服务器请求一个资源，服务器在返回这个资源的同时，在respone的header加上Last-Modified的header，这个header表示这个资源在服务器上的最后修改时间
2.浏览器再次跟服务器请求这个资源时，在request的header上加上If-Modified-Since的header，这个header的值就是上一次请求时返回的Last-Modified的值
3.服务器再次收到资源请求时，根据浏览器传过来If-Modified-Since和资源在服务器上的最后修改时间判断资源是否有变化，如果没有变化则返回304 Not Modified，但是不会返回资源内容；如果有变化，就正常返回资源内容。当服务器返回304 Not Modified的响应时，response header中不会再添加Last-Modified的header，因为既然资源没有变化，那么Last-Modified也就不会改变
4.浏览器收到304的响应后，就会从缓存中加载资源。
5.如果协商缓存没有命中，浏览器直接从服务器加载资源时，Last-Modified Header在重新加载的时候会被更新，下次请求时，If-Modified-Since会启用上次返回的Last-Modified值。

----------------------------------------------------------------------------------------------------------------------------------------------

协商缓存跟强缓存不一样，强缓存不发请求到服务器，所以有时候资源更新了浏览器还不知道，但是协商缓存会发请求到服务器，所以资源是否更新，服务器肯定知道。大部分web服务器都默认开启协商缓存，而且是同时启用【Last-Modified，If-Modified-Since】和【ETag、If-None-Match】

----------------------------------------------------------------------------------------------------------------------------------------------